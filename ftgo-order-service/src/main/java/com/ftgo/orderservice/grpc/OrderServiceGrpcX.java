// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderService.proto

package com.ftgo.orderservice.grpc;

import static io.grpc.MethodDescriptor.generateFullMethodName;
import static io.grpc.stub.ClientCalls.asyncUnaryCall;
import static io.grpc.stub.ClientCalls.blockingUnaryCall;
import static io.grpc.stub.ClientCalls.futureUnaryCall;
import static io.grpc.stub.ServerCalls.asyncUnaryCall;
import static io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall;

/**
 */
@javax.annotation.Generated(
    value = "by gRPC proto compiler (version 1.13.2)",
    comments = "Source: OrderService.proto")
public final class OrderServiceGrpcX {

  private OrderServiceGrpcX() {}

  public static final String SERVICE_NAME = "orderservice.OrderService";

  // Static method descriptors that strictly reflect the proto.
  private static volatile io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> getCreateOrderMethod;

  public static io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> getCreateOrderMethod() {
    io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> getCreateOrderMethod;
    if ((getCreateOrderMethod = OrderServiceGrpcX.getCreateOrderMethod) == null) {
      synchronized (OrderServiceGrpcX.class) {
        if ((getCreateOrderMethod = OrderServiceGrpcX.getCreateOrderMethod) == null) {
          OrderServiceGrpcX.getCreateOrderMethod = getCreateOrderMethod = 
              io.grpc.MethodDescriptor.<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "orderservice.OrderService", "createOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply.getDefaultInstance()))
                  .setSchemaDescriptor(new OrderServiceMethodDescriptorSupplier("createOrder"))
                  .build();
          }
        }
     }
     return getCreateOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> getCancelOrderMethod;

  public static io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> getCancelOrderMethod() {
    io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> getCancelOrderMethod;
    if ((getCancelOrderMethod = OrderServiceGrpcX.getCancelOrderMethod) == null) {
      synchronized (OrderServiceGrpcX.class) {
        if ((getCancelOrderMethod = OrderServiceGrpcX.getCancelOrderMethod) == null) {
          OrderServiceGrpcX.getCancelOrderMethod = getCancelOrderMethod = 
              io.grpc.MethodDescriptor.<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "orderservice.OrderService", "cancelOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply.getDefaultInstance()))
                  .setSchemaDescriptor(new OrderServiceMethodDescriptorSupplier("cancelOrder"))
                  .build();
          }
        }
     }
     return getCancelOrderMethod;
  }

  private static volatile io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> getReviseOrderMethod;

  public static io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest,
      com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> getReviseOrderMethod() {
    io.grpc.MethodDescriptor<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> getReviseOrderMethod;
    if ((getReviseOrderMethod = OrderServiceGrpcX.getReviseOrderMethod) == null) {
      synchronized (OrderServiceGrpcX.class) {
        if ((getReviseOrderMethod = OrderServiceGrpcX.getReviseOrderMethod) == null) {
          OrderServiceGrpcX.getReviseOrderMethod = getReviseOrderMethod = 
              io.grpc.MethodDescriptor.<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest, com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "orderservice.OrderService", "reviseOrder"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest.getDefaultInstance()))
              .setResponseMarshaller(io.grpc.protobuf.ProtoUtils.marshaller(
                  com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply.getDefaultInstance()))
                  .setSchemaDescriptor(new OrderServiceMethodDescriptorSupplier("reviseOrder"))
                  .build();
          }
        }
     }
     return getReviseOrderMethod;
  }

  /**
   * Creates a new async stub that supports all call types for the service
   */
  public static OrderServiceStub newStub(io.grpc.Channel channel) {
    return new OrderServiceStub(channel);
  }

  /**
   * Creates a new blocking-style stub that supports unary and streaming output calls on the service
   */
  public static OrderServiceBlockingStub newBlockingStub(
      io.grpc.Channel channel) {
    return new OrderServiceBlockingStub(channel);
  }

  /**
   * Creates a new ListenableFuture-style stub that supports unary calls on the service
   */
  public static OrderServiceFutureStub newFutureStub(
      io.grpc.Channel channel) {
    return new OrderServiceFutureStub(channel);
  }

  /**
   */
  public static abstract class OrderServiceImplBase implements io.grpc.BindableService {

    /**
     */
    public void createOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> responseObserver) {
      asyncUnimplementedUnaryCall(getCreateOrderMethod(), responseObserver);
    }

    /**
     */
    public void cancelOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> responseObserver) {
      asyncUnimplementedUnaryCall(getCancelOrderMethod(), responseObserver);
    }

    /**
     */
    public void reviseOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> responseObserver) {
      asyncUnimplementedUnaryCall(getReviseOrderMethod(), responseObserver);
    }

    @java.lang.Override public final io.grpc.ServerServiceDefinition bindService() {
      return io.grpc.ServerServiceDefinition.builder(getServiceDescriptor())
          .addMethod(
            getCreateOrderMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest,
                com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply>(
                  this, METHODID_CREATE_ORDER)))
          .addMethod(
            getCancelOrderMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest,
                com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply>(
                  this, METHODID_CANCEL_ORDER)))
          .addMethod(
            getReviseOrderMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest,
                com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply>(
                  this, METHODID_REVISE_ORDER)))
          .build();
    }
  }

  /**
   */
  public static final class OrderServiceStub extends io.grpc.stub.AbstractStub<OrderServiceStub> {
    private OrderServiceStub(io.grpc.Channel channel) {
      super(channel);
    }

    private OrderServiceStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected OrderServiceStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new OrderServiceStub(channel, callOptions);
    }

    /**
     */
    public void createOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> responseObserver) {
      asyncUnaryCall(
          getChannel().newCall(getCreateOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void cancelOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> responseObserver) {
      asyncUnaryCall(
          getChannel().newCall(getCancelOrderMethod(), getCallOptions()), request, responseObserver);
    }

    /**
     */
    public void reviseOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest request,
        io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> responseObserver) {
      asyncUnaryCall(
          getChannel().newCall(getReviseOrderMethod(), getCallOptions()), request, responseObserver);
    }
  }

  /**
   */
  public static final class OrderServiceBlockingStub extends io.grpc.stub.AbstractStub<OrderServiceBlockingStub> {
    private OrderServiceBlockingStub(io.grpc.Channel channel) {
      super(channel);
    }

    private OrderServiceBlockingStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected OrderServiceBlockingStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new OrderServiceBlockingStub(channel, callOptions);
    }

    /**
     */
    public com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply createOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest request) {
      return blockingUnaryCall(
          getChannel(), getCreateOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply cancelOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest request) {
      return blockingUnaryCall(
          getChannel(), getCancelOrderMethod(), getCallOptions(), request);
    }

    /**
     */
    public com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply reviseOrder(com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest request) {
      return blockingUnaryCall(
          getChannel(), getReviseOrderMethod(), getCallOptions(), request);
    }
  }

  /**
   */
  public static final class OrderServiceFutureStub extends io.grpc.stub.AbstractStub<OrderServiceFutureStub> {
    private OrderServiceFutureStub(io.grpc.Channel channel) {
      super(channel);
    }

    private OrderServiceFutureStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }

    @java.lang.Override
    protected OrderServiceFutureStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new OrderServiceFutureStub(channel, callOptions);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply> createOrder(
        com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest request) {
      return futureUnaryCall(
          getChannel().newCall(getCreateOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply> cancelOrder(
        com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest request) {
      return futureUnaryCall(
          getChannel().newCall(getCancelOrderMethod(), getCallOptions()), request);
    }

    /**
     */
    public com.google.common.util.concurrent.ListenableFuture<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply> reviseOrder(
        com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest request) {
      return futureUnaryCall(
          getChannel().newCall(getReviseOrderMethod(), getCallOptions()), request);
    }
  }

  private static final int METHODID_CREATE_ORDER = 0;
  private static final int METHODID_CANCEL_ORDER = 1;
  private static final int METHODID_REVISE_ORDER = 2;

  private static final class MethodHandlers<Req, Resp> implements
      io.grpc.stub.ServerCalls.UnaryMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ServerStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ClientStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.BidiStreamingMethod<Req, Resp> {
    private final OrderServiceImplBase serviceImpl;
    private final int methodId;

    MethodHandlers(OrderServiceImplBase serviceImpl, int methodId) {
      this.serviceImpl = serviceImpl;
      this.methodId = methodId;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public void invoke(Req request, io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        case METHODID_CREATE_ORDER:
          serviceImpl.createOrder((com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CreateOrderReply>) responseObserver);
          break;
        case METHODID_CANCEL_ORDER:
          serviceImpl.cancelOrder((com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.CancelOrderReply>) responseObserver);
          break;
        case METHODID_REVISE_ORDER:
          serviceImpl.reviseOrder((com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderRequest) request,
              (io.grpc.stub.StreamObserver<com.ftgo.orderservice.grpc.OrderServiceProtoX.ReviseOrderReply>) responseObserver);
          break;
        default:
          throw new AssertionError();
      }
    }

    @java.lang.Override
    public io.grpc.stub.StreamObserver<Req> invoke(
        io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        default:
          throw new AssertionError();
      }
    }
  }

  private static abstract class OrderServiceBaseDescriptorSupplier
      implements io.grpc.protobuf.ProtoFileDescriptorSupplier, io.grpc.protobuf.ProtoServiceDescriptorSupplier {
    OrderServiceBaseDescriptorSupplier() {}

    @java.lang.Override
    public com.google.protobuf.Descriptors.FileDescriptor getFileDescriptor() {
      return com.ftgo.orderservice.grpc.OrderServiceProtoX.getDescriptor();
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.ServiceDescriptor getServiceDescriptor() {
      return getFileDescriptor().findServiceByName("OrderService");
    }
  }

  private static final class OrderServiceFileDescriptorSupplier
      extends OrderServiceBaseDescriptorSupplier {
    OrderServiceFileDescriptorSupplier() {}
  }

  private static final class OrderServiceMethodDescriptorSupplier
      extends OrderServiceBaseDescriptorSupplier
      implements io.grpc.protobuf.ProtoMethodDescriptorSupplier {
    private final String methodName;

    OrderServiceMethodDescriptorSupplier(String methodName) {
      this.methodName = methodName;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.MethodDescriptor getMethodDescriptor() {
      return getServiceDescriptor().findMethodByName(methodName);
    }
  }

  private static volatile io.grpc.ServiceDescriptor serviceDescriptor;

  public static io.grpc.ServiceDescriptor getServiceDescriptor() {
    io.grpc.ServiceDescriptor result = serviceDescriptor;
    if (result == null) {
      synchronized (OrderServiceGrpcX.class) {
        result = serviceDescriptor;
        if (result == null) {
          serviceDescriptor = result = io.grpc.ServiceDescriptor.newBuilder(SERVICE_NAME)
              .setSchemaDescriptor(new OrderServiceFileDescriptorSupplier())
              .addMethod(getCreateOrderMethod())
              .addMethod(getCancelOrderMethod())
              .addMethod(getReviseOrderMethod())
              .build();
        }
      }
    }
    return result;
  }
}

